apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.apollographql.apollo'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.test.apollocache"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    apollo {
        schemaFile.set(file("../schema.json"))
        graphqlSourceDirectorySet.srcDirs += "src/main/graphql"
        rootPackageName = "com.alabs.testCache.graphQL"
    }

    androidExtensions {
        experimental = true
    }
}

repositories {
    maven {
        url "http://maven.google.com/"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "androidx.multidex:multidex:${versions.multiDexVersion}"

    def retrofitVersion = versions.retrofitVersion
    def coroutineAdapter = versions.coroutineAdapterVersion
    def mockWebServer = versions.mockWebServerVersion
    def logInterceptor = versions.logInterceptorVersion


    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutineAdapter"
    implementation "com.squareup.okhttp3:logging-interceptor:$logInterceptor"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServer"

    def apolloVersion = versions.apolloVersion

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2")
    implementation("com.apollographql.apollo:apollo-runtime:$apolloVersion")
    implementation("com.squareup.okhttp3:okhttp:4.4.1")
    implementation "com.apollographql.apollo:apollo-android-support:$apolloVersion"
    implementation "com.apollographql.apollo:apollo-coroutines-support:$apolloVersion"
    implementation("com.apollographql.apollo:apollo-http-cache:$apolloVersion")
}
